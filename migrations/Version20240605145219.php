<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use App\Doctrine\Migrations\HasherInterface;
use App\Entity\User;
use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;
use Symfony\Component\PasswordHasher\Hasher\PasswordHasherFactoryInterface;

final class Version20240605145219 extends AbstractMigration implements HasherInterface
{
    private ?PasswordHasherFactoryInterface $hasher = null;

    public function getDescription(): string
    {
        return 'Добавление ролевой модели';
    }

    public function up(Schema $schema): void
    {
        $this->addSql('CREATE TABLE privilege (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, code VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE TABLE role (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, code VARCHAR(255) NOT NULL, name VARCHAR(255) NOT NULL, privileges JSON NOT NULL, PRIMARY KEY(id))');
        $this->addSql('ALTER TABLE "user" ADD privileges JSON NOT NULL DEFAULT \'{}\'::jsonb');
        $this->addSql('INSERT INTO role (id, code, name, privileges) VALUES (1, \'ROLE_ADMIN\', \'Администратор\', \'[]\')');
        $this->addSql('INSERT INTO "user" (id, username, roles, password, privileges) VALUES (2, \'admin\', \'["ROLE_ADMIN"]\', :password, \'[]\');', ['password' => $this->getHasher()->getPasswordHasher(new User())->hash('admin')]);

    }

    public function down(Schema $schema): void
    {
        $this->addSql('DROP TABLE privilege');
        $this->addSql('DROP TABLE role');
        $this->addSql('ALTER TABLE "user" DROP privileges');
    }

    public function getHasher(): PasswordHasherFactoryInterface {
        return $this->hasher ?? throw new \LogicException();
    }

    public function setHasher(PasswordHasherFactoryInterface $hasher): void {
        $this->hasher = $hasher;
    }
}
