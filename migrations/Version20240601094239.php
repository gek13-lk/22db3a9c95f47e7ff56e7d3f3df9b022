<?php

declare(strict_types=1);

namespace DoctrineMigrations;

use Doctrine\DBAL\Schema\Schema;
use Doctrine\Migrations\AbstractMigration;

/**
 * Auto-generated Migration: Please modify to your needs!
 */
final class Version20240601094239 extends AbstractMigration
{
    public function getDescription(): string
    {
        return '';
    }

    public function up(Schema $schema): void
    {
        $this->addSql('CREATE TABLE coefficient_plan (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, minimal_coefficient_per_shift DOUBLE PRECISION DEFAULT NULL, max_coefficient_per_shift DOUBLE PRECISION DEFAULT NULL, minimal_coefficient_per_month DOUBLE PRECISION DEFAULT NULL, max_coefficient_per_month DOUBLE PRECISION DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN coefficient_plan.minimal_coefficient_per_shift IS \'Минимальный план  УЕ* в смену\'');
        $this->addSql('COMMENT ON COLUMN coefficient_plan.max_coefficient_per_shift IS \'Максимальный план  УЕ* в смену\'');
        $this->addSql('COMMENT ON COLUMN coefficient_plan.minimal_coefficient_per_month IS \'Минимальный план  УЕ* в месяц\'');
        $this->addSql('COMMENT ON COLUMN coefficient_plan.max_coefficient_per_month IS \'Максимальный план  УЕ* в месяц\'');
        $this->addSql('CREATE TABLE competencies (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, modality VARCHAR(255) DEFAULT NULL, contrast VARCHAR(255) DEFAULT NULL, minimal_count_per_shift DOUBLE PRECISION DEFAULT NULL, minimal_coefficient_per_shift DOUBLE PRECISION DEFAULT NULL, max_count_per_shift DOUBLE PRECISION DEFAULT NULL, max_coefficient_per_shift DOUBLE PRECISION DEFAULT NULL, coefficient DOUBLE PRECISION DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN competencies.modality IS \'Модальность\'');
        $this->addSql('COMMENT ON COLUMN competencies.contrast IS \'Контрастное усиление\'');
        $this->addSql('COMMENT ON COLUMN competencies.minimal_count_per_shift IS \'Минимальное количество исследований за смену шт. \'');
        $this->addSql('COMMENT ON COLUMN competencies.minimal_coefficient_per_shift IS \'Минимальное количество УЕ за смену шт.\'');
        $this->addSql('COMMENT ON COLUMN competencies.max_count_per_shift IS \'Максимальное количество исследований за смену шт.\'');
        $this->addSql('COMMENT ON COLUMN competencies.max_coefficient_per_shift IS \'Максимальное количество УЕ за смену, с округлением вниз до целого числа\'');
        $this->addSql('COMMENT ON COLUMN competencies.coefficient IS \'Количество УЕ в одном описании\'');
        $this->addSql('CREATE TABLE doctor (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, surname VARCHAR(255) DEFAULT NULL, firstname VARCHAR(255) DEFAULT NULL, middlename VARCHAR(255) DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('COMMENT ON COLUMN doctor.surname IS \'Фамилия\'');
        $this->addSql('COMMENT ON COLUMN doctor.firstname IS \'Имя\'');
        $this->addSql('COMMENT ON COLUMN doctor.middlename IS \'Отчество\'');
        $this->addSql('CREATE TABLE doctor_competencies (doctor_id INT NOT NULL, competencies_id INT NOT NULL, PRIMARY KEY(doctor_id, competencies_id))');
        $this->addSql('CREATE INDEX IDX_5863585887F4FB17 ON doctor_competencies (doctor_id)');
        $this->addSql('CREATE INDEX IDX_586358581A05A60B ON doctor_competencies (competencies_id)');
        $this->addSql('CREATE TABLE doctor_work_schedules (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, type VARCHAR(255) DEFAULT NULL, hours_per_shift INT DEFAULT NULL, shift_per_cycle INT DEFAULT NULL, days_off INT DEFAULT NULL, doctor_id INT DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE UNIQUE INDEX UNIQ_DC6DAEEC87F4FB17 ON doctor_work_schedules (doctor_id)');
        $this->addSql('COMMENT ON COLUMN doctor_work_schedules.type IS \'Тип смены\'');
        $this->addSql('COMMENT ON COLUMN doctor_work_schedules.hours_per_shift IS \'Количество часов за смену\'');
        $this->addSql('COMMENT ON COLUMN doctor_work_schedules.shift_per_cycle IS \'Смен за цикл\'');
        $this->addSql('COMMENT ON COLUMN doctor_work_schedules.days_off IS \'Количество выходных дней за цикл\'');
        $this->addSql('CREATE TABLE studies (id INT GENERATED BY DEFAULT AS IDENTITY NOT NULL, date TIMESTAMP(0) WITHOUT TIME ZONE DEFAULT NULL, competency_id INT DEFAULT NULL, PRIMARY KEY(id))');
        $this->addSql('CREATE INDEX IDX_C3A91A3FFB9F58C ON studies (competency_id)');
        $this->addSql('ALTER TABLE doctor_competencies ADD CONSTRAINT FK_5863585887F4FB17 FOREIGN KEY (doctor_id) REFERENCES doctor (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE doctor_competencies ADD CONSTRAINT FK_586358581A05A60B FOREIGN KEY (competencies_id) REFERENCES competencies (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE doctor_work_schedules ADD CONSTRAINT FK_DC6DAEEC87F4FB17 FOREIGN KEY (doctor_id) REFERENCES doctor (id) NOT DEFERRABLE INITIALLY IMMEDIATE');
        $this->addSql('ALTER TABLE studies ADD CONSTRAINT FK_C3A91A3FFB9F58C FOREIGN KEY (competency_id) REFERENCES competencies (id) NOT DEFERRABLE INITIALLY IMMEDIATE');

        $this->addCompetenciesRef();
        $this->addDoctors();
        $this->addDoctorCompetencies();
        $this->createDoctorWorkSchedule();
        $this->setDoctorsWorkSchedule();
        $this->setCoefficientPlan();
    }

    public function down(Schema $schema): void
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->addSql('CREATE SCHEMA public');
        $this->addSql('ALTER TABLE doctor_competencies DROP CONSTRAINT FK_5863585887F4FB17');
        $this->addSql('ALTER TABLE doctor_competencies DROP CONSTRAINT FK_586358581A05A60B');
        $this->addSql('ALTER TABLE doctor_work_schedules DROP CONSTRAINT FK_DC6DAEEC87F4FB17');
        $this->addSql('ALTER TABLE studies DROP CONSTRAINT FK_C3A91A3FFB9F58C');
        $this->addSql('DROP TABLE competencies');
        $this->addSql('DROP TABLE doctor');
        $this->addSql('DROP TABLE doctor_competencies');
        $this->addSql('DROP TABLE doctor_work_schedules');
        $this->addSql('DROP TABLE studies');
    }

    private function addCompetenciesRef(): void
    {
        $data = [
            "Исследования без КУ" => [
                ["modality" => "КТ", "coefficient" => 11.6, "minimalCountPerShift" => 15.6, "minimalCoefficientPerShift" => 181.00, "maxCountPerShift" => 39, "maxCoefficientPerShift" => 451.00],
                ["modality" => "МРТ", "coefficient" => 15.1, "minimalCountPerShift" => 12, "minimalCoefficientPerShift" => 181.00, "maxCountPerShift" => 30, "maxCoefficientPerShift" => 451.00],
                ["modality" => "РГ", "coefficient" => 3.7, "minimalCountPerShift" => 49.2, "minimalCoefficientPerShift" => 181.00, "maxCountPerShift" => 123, "maxCoefficientPerShift" => 451.00],
                ["modality" => "ФЛГ", "coefficient" => 1.0, "minimalCountPerShift" => 181, "minimalCoefficientPerShift" => 181.00, "maxCountPerShift" => 451, "maxCoefficientPerShift" => 451.00],
                ["modality" => "ММГ", "coefficient" => 3.7, "minimalCountPerShift" => 49.2, "minimalCoefficientPerShift" => 181.00, "maxCountPerShift" => 123, "maxCoefficientPerShift" => 451.00],
                ["modality" => "Денситометр", "coefficient" => 2.2, "minimalCountPerShift" => 84, "minimalCoefficientPerShift" => 181.00, "maxCountPerShift" => 210, "maxCoefficientPerShift" => 451.00],
            ],
            "Исследования с КУ" => [
                ["modality" => "КТ", "coefficient" => 18.8, "minimalCountPerShift" => 9, "minimalCoefficientPerShift" => 169.00, "maxCountPerShift" => 24, "maxCoefficientPerShift" => 451.00],
                ["modality" => "МРТ", "coefficient" => 19.7, "minimalCountPerShift" => 8, "minimalCoefficientPerShift" => 157.00, "maxCountPerShift" => 20, "maxCoefficientPerShift" => 451.00],
            ],
            "Исследования с КУ (2 и более анатомические зоны)" => [
                ["modality" => "КТ", "coefficient" => 26.6, "minimalCountPerShift" => 6, "minimalCoefficientPerShift" => 159.00, "maxCountPerShift" => 17, "maxCoefficientPerShift" => 451.00],
                ["modality" => "МРТ", "coefficient" => 30.1, "minimalCountPerShift" => 5, "minimalCoefficientPerShift" => 150.00, "maxCountPerShift" => 15, "maxCoefficientPerShift" => 451.00],
            ],
        ];

        foreach ($data as $contrast => $researches) {
            foreach ($researches as $researchData) {
                $this->addSql('
                    INSERT INTO competencies (modality, contrast, minimal_count_per_shift, minimal_coefficient_per_shift, max_count_per_shift, max_coefficient_per_shift, coefficient)
                    VALUES (?, ?, ?, ?, ?, ?, ?)
                ', [
                    $researchData["modality"],
                    $contrast,
                    $researchData["minimalCountPerShift"],
                    $researchData["minimalCoefficientPerShift"],
                    $researchData["maxCountPerShift"],
                    $researchData["maxCoefficientPerShift"],
                    $researchData["coefficient"]
                ]);
            }
        }
    }

    private function addDoctors(): void
    {
        $data = [
            ['surname' => 'Грызлов', 'firstname' => 'Иван', 'middlename' => 'Демидович'],
            ['surname' => 'Хомяков', 'firstname' => 'Александр', 'middlename' => 'Николаевич'],
            ['surname' => 'Пипич', 'firstname' => 'Михаил'],
            ['surname' => 'Юринский', 'firstname' => 'Юрий', 'middlename' => 'Демидович'],
            ['surname' => 'Алябина', 'firstname' => 'Александра'],
        ];

        foreach ($data as $row) {
            $this->addSql('INSERT INTO doctor (surname, firstname, middlename) VALUES (?, ?, ?)', [
                $row['surname'] ?? null,
                $row['firstname'] ?? null,
                $row['middlename'] ?? null,
            ]);
        }
    }

    private function addDoctorCompetencies(): void
    {
        $doctorsCount = 5;

        $competenciesCount = 10;

        for ($j = 1; $j <= $doctorsCount; $j++) {
            $doctorCompetenciesCount = rand(1, $competenciesCount);

            $competenciesToAdd = [];

            for ($i = 1; $i <= $doctorCompetenciesCount; $i++) {
                $competencyToAdd = rand(1, $competenciesCount);

                if (in_array($competencyToAdd, $competenciesToAdd)) {
                    continue;
                }

                $competenciesToAdd[] = $competencyToAdd;
            }

            foreach ($competenciesToAdd as $competencyToAdd) {
                $this->addSql('INSERT INTO doctor_competencies (doctor_id, competencies_id) VALUES (?, ?)', [
                    $j,
                    $competencyToAdd,
                ]);
            }
        }
    }

    private function createDoctorWorkSchedule(): void
    {
        $data = [
            ['schedule_type' => 'Дневные смены', 'hours_per_shift' => 8, 'shifts_per_cycle' => 5, 'days_off' => 2],
            ['schedule_type' => 'Ночные смены', 'hours_per_shift' => 12, 'shifts_per_cycle' => 4, 'days_off' => 3],
            ['schedule_type' => 'Сутки через трое', 'hours_per_shift' => 24, 'shifts_per_cycle' => 1, 'days_off' => 3],
            ['schedule_type' => 'День-ночь', 'hours_per_shift' => 12, 'shifts_per_cycle' => 2, 'days_off' => 2],
            ['schedule_type' => 'Два выходных', 'hours_per_shift' => 8, 'shifts_per_cycle' => 5, 'days_off' => 2],
        ];

        foreach ($data as $schedule) {
            $this->addSql('INSERT INTO doctor_work_schedules (type, hours_per_shift, shift_per_cycle, days_off) VALUES (?, ?, ?, ?)',
                [
                    $schedule['schedule_type'],
                    $schedule['hours_per_shift'],
                    $schedule['shifts_per_cycle'],
                    $schedule['days_off'],
                ]
            );
        }
    }

    private function setDoctorsWorkSchedule(): void
    {
        $data = [
            ['doctor_id' => 1, 'id' => 1],
            ['doctor_id' => 2, 'id' => 2],
            ['doctor_id' => 3, 'id' => 3],
            ['doctor_id' => 4, 'id' => 4],
            ['doctor_id' => 5, 'id' => 5],
        ];

        foreach ($data as $schedule) {
            $this->addSql('UPDATE doctor_work_schedules SET doctor_id = ? WHERE id = ?',
                [
                    $schedule['doctor_id'],
                    $schedule['id'],
                ]
            );
        }
    }

    public function setCoefficientPlan(): void
    {
        $this->addSql('INSERT INTO coefficient_plan (minimal_coefficient_per_shift, max_coefficient_per_shift, minimal_coefficient_per_month, max_coefficient_per_month) VALUES (181, 451, 3801, 9471)');
    }
}
