version: '3.8'

services:
  app:
    build:
      context: ./docker/php
    environment:
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG:-serverName=docker}
      XDEBUG_MODE: ${XDEBUG_MODE:-off}
      XDEBUG_TRIGGER: 'yes'
    volumes:
      - ./:/app:cached
    depends_on:
      - rabbitmq
    networks:
      - app-network

  nginx:
    image: nginx:1.26-alpine
    volumes:
      - ./:/app:cached
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - '80:80'
    depends_on:
      - app
    networks:
      - app-network

  django:
    build:
      context: ./docker/django
    command: >
      /bin/sh -c "
      python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - ./docker/django/:/usr/src/app/
    depends_on:
      - rabbitmq
    networks:
      - app-network
    ports:
      - "8000:8000"

  worker:
    build:
      context: ./docker/django
    command: >
      /bin/sh -c "
      python manage.py run_worker
      "
    volumes:
      - ./docker/django/:/usr/src/app/
    depends_on:
      - rabbitmq
    networks:
      - app-network

  db:
    image: postgres:16-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=app
      - TZ=Europe/Moscow
      - PGTZ=Europe/Moscow
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - app-network

  rabbitmq:
    restart: always
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/
    networks:
      - app-network

volumes:
  db-data:
  rabbitmq-data:

networks:
  app-network:
    driver: bridge
